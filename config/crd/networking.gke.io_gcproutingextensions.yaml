---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  labels:
    gateway.networking.k8s.io/policy: "true"
  name: gcproutingextensions.networking.gke.io
spec:
  group: networking.gke.io
  names:
    kind: GCPRoutingExtension
    listKind: GCPRoutingExtensionList
    plural: gcproutingextensions
    singular: gcproutingextension
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: |-
          GCPRoutingExtension is the CRD for the Routing Extension.
          It provides a way to add custom logic into Cloud Load Balancers
          to control where traffic is routed to for a given request.
          It is only supported for Regional External Managed and
          Regional Internal Managed Load Balancers.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GCPRoutingExtension.
            properties:
              extensionChains:
                description: |-
                  ExtensionChains is a set of ordered extension chains that contain
                  the match conditions and extensions to execute. Match conditions for each
                  extension chain are evaluated in sequence for a given request. The first
                  extension chain that has conditions that match the request is executed.
                  Any subsequent extension chains do not execute.
                  Limited to 5 ExtensionChains.
                items:
                  description: |-
                    ExtensionChain is single extension chain wrapper that contains the match conditions
                    and extensions to execute.
                  properties:
                    extensions:
                      description: |-
                        Extensions is a set of extensions to execute for the matching request.
                        Up to 3 Extensions can be defined for each ExtensionChain
                        for the GCPTrafficExtension.
                        GCPRoutingExtension chains are limited to 1 Extension per ExtensionChain.
                      items:
                        description: Extension is a single extension in the chain
                          to execute for the matching request.
                        properties:
                          authority:
                            description: |-
                              Authority is the `:authority` header in the gRPC request sent from Envoy
                              to the callout extension backend service.
                              Required for extensions with callout backend service.
                            maxLength: 1000
                            pattern: ^[A-Za-z0-9-_:%\.\[\]]*$
                            type: string
                          backendRef:
                            description: |-
                              BackendRef identifies an API object that runs the extension.
                              Exactly one of BackendRef or GoogleAPIServiceName should be set.
                            properties:
                              group:
                                default: ""
                                description: Group is the group of the referent.
                                enum:
                                - ""
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Service
                                description: Kind is kind of the referent.
                                enum:
                                - Service
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              port:
                                description: Port is the port of the referent.
                                format: int32
                                type: integer
                            required:
                            - group
                            - kind
                            - name
                            - port
                            type: object
                          failOpen:
                            description: |-
                              FailOpen determines how the proxy behaves if the call to the extension
                              fails or times out.

                              When set to `TRUE`, request or response processing continues without
                              error. Any subsequent extensions in the extension chain are also
                              executed. When set to `FALSE` or the default setting of `FALSE` is used,
                              one of the following happens:

                              * If response headers have not been delivered to the downstream client,
                              a generic 500 error is returned to the client. The error response can be
                              tailored by configuring a custom error response in the load balancer.

                              * If response headers have been delivered, then the HTTP stream to the
                              downstream client is reset.
                            type: boolean
                          forwardHeaders:
                            description: |-
                              ForwardHeaders is a list of the HTTP headers to forward to the extension
                              (from the client or backend). If omitted, all headers are sent.
                              Each element indicates the header name.
                            items:
                              description: HTTPHeaderName is the name of the HTTP
                                header.
                              maxLength: 256
                              minLength: 1
                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                              type: string
                            maxItems: 50
                            type: array
                          googleAPIServiceName:
                            description: |-
                              GoogleAPIServiceName is the name of the Google API service that runs the extension.
                              The name must be in one of the following formats:
                              - <serviceName>.<region>.rep.googleapis.com in regional case.
                              Exactly one of BackendRef or GoogleAPIServiceName should be set.
                            maxLength: 100
                            pattern: ^(modelarmor|dlp)\.([a-z0-9-]+\.rep\.)?googleapis\.com$
                            type: string
                          metadata:
                            additionalProperties:
                              description: MetadataValue is the value of an metadata
                                in GCP Extensions.
                              maxLength: 1023
                              minLength: 1
                              pattern: ^([A-Za-z0-9\/\-._~%!$&'()*+,;=:"\s\[\]\{\}])*$
                              type: string
                            description: |-
                              Metadata provided here is included as part of the
                              `metadata_context` (of type `google.protobuf.Struct`) in the
                              `ProcessingRequest` message sent to the extension
                              server. The metadata is available under the namespace
                              `com.google.<extension_type>.<resource_name>.<extension_chain_name>.<extension_name>`.
                              For example:
                              `com.google.lb_traffic_extension.lbtrafficextension1.chain1.ext1`.

                              The following variables are supported in the metadata:

                              `{forwarding_rule_id}` - substituted with the forwarding rule's fully
                                qualified resource name.
                            maxProperties: 16
                            type: object
                            x-kubernetes-validations:
                            - message: Metadata keys must only contain valid characters
                                (matching ^([A-Za-z0-9\/\-._~%!$&'()*+,;=:\s\[\]\{\}]{1,63})$)
                                and must be up to 63 characters long.
                              rule: self.all(key, key.matches(r"""^([A-Za-z0-9\/\-._~%!$&'()*+,;=:\s\{\}\[\]]{1,63})$"""))
                          name:
                            description: |-
                              Name is the name for this chain.
                              The name is logged as part of the HTTP request logs.
                              The name must conform with RFC-1034, is restricted to lower-cased
                              letters, numbers and hyphens, and can have a maximum length of 63
                              characters. Additionally, the first character must be a letter and the
                              last a letter or a number.
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$
                            type: string
                          requestBodySendMode:
                            description: |-
                              RequestBodySendMode configures processing mode for request processing. If not specified
                              and RequestBody event is supported, the default value STREAMED is used.
                              Supported by both `GCPTrafficExtension` and `GCPRoutingExtension` resources
                              and only for extensions with `backendRef`.
                              When this field is set to `FullDuplexStreamed`, `supportedEvents`
                              must include both `RequestBody` and `RequestTrailers`.
                            enum:
                            - Streamed
                            - FullDuplexStreamed
                            type: string
                          responseBodySendMode:
                            description: |-
                              ResponseBodySendMode configures processing mode for response processing.
                              If not specified and RequestBody event is supported, the default value STREAMED is used.
                              Supported only by `GCPTrafficExtension` resource
                              and only for extensions with `backendRef`.
                              When this field is set to `FullDuplexStreamed`, `supportedEvents`
                              must include both `ResponseBody` and `ResponseTrailers`.
                            enum:
                            - Streamed
                            - FullDuplexStreamed
                            type: string
                          supportedEvents:
                            description: |-
                              SupportedEvents is a set of events during request or response
                              processing for which this extension is called.

                              This field is required for the `GCPTrafficExtension` resource.
                              This field is optional for the `GCPRoutingExtension` resource.

                              If requestBodySendMode is set for the `GCPRoutingExtension` resource,
                              then the `supportedEvents` list can only contain `RequestHeaders` events.
                              If requestBodySendMode is set to `FullDuplexStreamed` for the `GCPRoutingExtension` resource,
                              then the `supportedEvents` list can only contain `RequestHeaders`, `RequestBody`
                              and `RequestTrailers` events.

                              If unspecified, `RequestHeaders` event is assumed as supported.
                              Limited to 6 events.
                            items:
                              description: EventType identifies the part of the request
                                or response for which the extension is called.
                              enum:
                              - RequestHeaders
                              - RequestBody
                              - ResponseHeaders
                              - ResponseBody
                              - RequestTrailers
                              - ResponseTrailers
                              type: string
                            maxItems: 6
                            type: array
                          timeout:
                            description: |-
                              Timeout specifies the timeout for each individual message on the stream.
                              The timeout must be between 10-1000 milliseconds.
                              If omitted, the default timeout is 1000 milliseconds.
                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                            type: string
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: timeout must be between 10-10000 milliseconds
                          rule: 'has(self.timeout) ? duration(self.timeout) >= duration(''10ms'')
                            && duration(self.timeout) <= duration(''10000ms'') : true'
                        - message: authority must be set if backendRef is set
                          rule: 'has(self.backendRef) ? has(self.authority) && size(self.authority)
                            != 0 : true'
                        - message: authority must be not set if googleAPIServiceName
                            is set
                          rule: 'has(self.googleAPIServiceName) ? !has(self.authority)
                            : true'
                        - message: Exactly one of backendRef or googleAPIServiceName
                            should be set
                          rule: '!(has(self.backendRef) && has(self.googleAPIServiceName))
                            && (has(self.backendRef) || has(self.googleAPIServiceName))'
                        - message: requestBodySendMode can be configured only for
                            extensions using backendRef
                          rule: 'has(self.requestBodySendMode) ? has(self.backendRef)
                            : true'
                        - message: responseBodySendMode can be configured only for
                            extensions using backendRef
                          rule: 'has(self.responseBodySendMode) ? has(self.backendRef)
                            : true'
                        - message: If requestBodySendMode is set to `Streamed`, then
                            the `supportedEvents` list must contain `RequestBody`
                            event
                          rule: 'has(self.requestBodySendMode) && self.requestBodySendMode
                            == ''Streamed'' ? self.supportedEvents.exists(e, e ==
                            ''RequestBody'') : true'
                        - message: If responseBodySendMode is set to `Streamed`, then
                            the `supportedEvents` list must contain `ResponseBody`
                            event
                          rule: 'has(self.responseBodySendMode) && self.responseBodySendMode
                            == ''Streamed'' ? self.supportedEvents.exists(e, e ==
                            ''ResponseBody'') : true'
                        - message: 'If requestBodySendMode is set to `FullDuplexStreamed`,
                            then the `supportedEvents` list must contain at least
                            both: `RequestBody` and `RequestTrailers“ events'
                          rule: 'has(self.requestBodySendMode) && self.requestBodySendMode
                            == ''FullDuplexStreamed'' ? self.supportedEvents.exists(e,
                            e == ''RequestBody'') && self.supportedEvents.exists(e,
                            e == ''RequestTrailers'') : true'
                        - message: 'If responseBodySendMode is set to `FullDuplexStreamed`,
                            then the `supportedEvents` list must contain at least
                            both: `ResponseBody` and `ResponseTrailers“ events'
                          rule: 'has(self.responseBodySendMode) && self.responseBodySendMode
                            == ''FullDuplexStreamed'' ? self.supportedEvents.exists(e,
                            e == ''ResponseBody'') && self.supportedEvents.exists(e,
                            e == ''ResponseTrailers'') : true'
                      maxItems: 3
                      minItems: 1
                      type: array
                    matchCondition:
                      description: MatchCondition is the condition under which this
                        chain is invoked for a request.
                      properties:
                        celExpressions:
                          description: |-
                            CELExpressions are expressions that are used to match requests for which
                            the extension chain is executed.
                            Limited to 10 CELExpressions.

                            Expressions are ORed together.
                          items:
                            description: |-
                              CELExpression contains the conditions under which the extension chain is invoked
                              for a request.

                              CELMatcher and BackendRef are ANDed together.
                            properties:
                              backendRefs:
                                description: |-
                                  BackendRefs are Kubernetes Services that are used to match requests
                                  for which the extension chain is executed.
                                items:
                                  description: |-
                                    ExtensionServiceReference defines a reference to the Service
                                    within the namespace of the referrer.
                                  properties:
                                    group:
                                      default: ""
                                      description: Group is the group of the referent.
                                      enum:
                                      - ""
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      default: Service
                                      description: Kind is kind of the referent.
                                      enum:
                                      - Service
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                    port:
                                      description: Port is the port of the referent.
                                      format: int32
                                      type: integer
                                  required:
                                  - group
                                  - kind
                                  - name
                                  - port
                                  type: object
                                type: array
                              celMatcher:
                                description: |-
                                  CELMatcher is a Common Expression Language (CEL) expression that is used
                                  to match requests for which the extension chain is executed.

                                  For more information, see [CEL matcher language
                                  reference](https://cloud.google.com/service-extensions/docs/cel-matcher-language-reference).
                                maxLength: 512
                                pattern: ^(( )|(request.headers)|(request.method)|(request.host)|(request.path)|(request.query)|(request.scheme)|(response.code)|(response.grpc_status)|(response.headers)|(source.address)|(source.port)|(connection.requested_server_name)|(connection.tls_version)|(connection.sha256_peer_certificate_digest)|(endsWith)|(startsWith)|(matches)|(contains)|(lowerAscii)|(upperAscii)|(int)|(==)|(!=)|(&&)|(>=)|(<=)|(>)|(<)|(\|\|)|(!)|(\+)|(\.)|(/)|('[a-zA-Z0-9\/\-._~%!$&'()*+,;=:\"\\]*')|("[a-zA-Z0-9\/\-._~%!$&'()*+,;=:\"\\]*")|(“[a-zA-Z0-9\/\-._~%!$&'()*+,;=:\"\\]*”)|(R"[a-zA-Z0-9\/\-._~%!$&'()*+,;=:\\]*")|[0-9]|(\()|(\))|(\[)|(\]))+$
                                type: string
                            type: object
                          maxItems: 10
                          type: array
                      type: object
                    name:
                      description: |-
                        Name is the name for this extension chain.
                        The name is logged as part of the HTTP request logs.
                        The name must conform with RFC-1034, is restricted to lower-cased letters,
                        numbers and hyphens, and can have a maximum length of 63 characters.
                        Additionally, the first character must be a letter and the last a letter or a number.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$
                      type: string
                  required:
                  - extensions
                  - name
                  type: object
                maxItems: 5
                minItems: 1
                type: array
              targetRefs:
                description: |-
                  TargetRefs is a list of API objects this extension applies to.
                  Valid Groups are:
                  - "gateway.networking.k8s.io"

                  Valid Kinds are:
                  - "Gateway"
                items:
                  description: |-
                    LocalObjectReference identifies an API object within the namespace of the
                    referrer.
                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.

                    References to objects with invalid Group and Kind are not valid, and must
                    be rejected by the implementation, with appropriate Conditions set
                    on the containing object.
                  properties:
                    group:
                      description: |-
                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                        When unspecified or empty string, core API group is inferred.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: Kind is kind of the referent. For example "HTTPRoute"
                        or "Service".
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: Name is the name of the referent.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  type: object
                maxItems: 10
                minItems: 1
                type: array
            required:
            - extensionChains
            - targetRefs
            type: object
          status:
            description: Status defines the current state of GCPRoutingExtension.
            properties:
              ancestors:
                description: |-
                  Ancestors is a list of ancestor resources (usually Gateways) that are
                  associated with the policy, and the status of the policy with respect to
                  each ancestor. When this policy attaches to a parent, the controller that
                  manages the parent and the ancestors MUST add an entry to this list when
                  the controller first sees the policy and SHOULD update the entry as
                  appropriate when the relevant ancestor is modified.

                  Note that choosing the relevant ancestor is left to the Policy designers;
                  an important part of Policy design is designing the right object level at
                  which to namespace this status.

                  Note also that implementations MUST ONLY populate ancestor status for
                  the Ancestor resources they are responsible for. Implementations MUST
                  use the ControllerName field to uniquely identify the entries in this list
                  that they are responsible for.

                  Note that to achieve this, the list of PolicyAncestorStatus structs
                  MUST be treated as a map with a composite key, made up of the AncestorRef
                  and ControllerName fields combined.

                  A maximum of 16 ancestors will be represented in this list. An empty list
                  means the Policy is not relevant for any ancestors.

                  If this slice is full, implementations MUST NOT add further entries.
                  Instead they MUST consider the policy unimplementable and signal that
                  on any related resources such as the ancestor that would be referenced
                  here. For example, if this list was full on BackendTLSPolicy, no
                  additional Gateways would be able to reference the Service targeted by
                  the BackendTLSPolicy.
                items:
                  description: |-
                    PolicyAncestorStatus describes the status of a route with respect to an
                    associated Ancestor.

                    Ancestors refer to objects that are either the Target of a policy or above it
                    in terms of object hierarchy. For example, if a policy targets a Service, the
                    Policy's Ancestors are, in order, the Service, the HTTPRoute, the Gateway, and
                    the GatewayClass. Almost always, in this hierarchy, the Gateway will be the most
                    useful object to place Policy status on, so we recommend that implementations
                    SHOULD use Gateway as the PolicyAncestorStatus object unless the designers
                    have a _very_ good reason otherwise.

                    In the context of policy attachment, the Ancestor is used to distinguish which
                    resource results in a distinct application of this policy. For example, if a policy
                    targets a Service, it may have a distinct result per attached Gateway.

                    Policies targeting the same resource may have different effects depending on the
                    ancestors of those resources. For example, different Gateways targeting the same
                    Service may have different capabilities, especially if they have different underlying
                    implementations.

                    For example, in BackendTLSPolicy, the Policy attaches to a Service that is
                    used as a backend in a HTTPRoute that is itself attached to a Gateway.
                    In this case, the relevant object for status is the Gateway, and that is the
                    ancestor object referred to in this status.

                    Note that a parent is also an ancestor, so for objects where the parent is the
                    relevant object for status, this struct SHOULD still be used.

                    This struct is intended to be used in a slice that's effectively a map,
                    with a composite key made up of the AncestorRef and the ControllerName.
                  properties:
                    ancestorRef:
                      description: |-
                        AncestorRef corresponds with a ParentRef in the spec that this
                        PolicyAncestorStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).

                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.

                            There are two kinds of parent resources with "Core" support:

                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)

                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.

                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.

                            <gateway:experimental:description>
                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.

                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.
                            </gateway:experimental:description>

                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.

                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.

                            <gateway:experimental:description>
                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.
                            </gateway:experimental:description>

                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.

                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.

                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:

                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.

                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.

                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                    conditions:
                      description: Conditions describes the status of the Policy with
                        respect to the given Ancestor.
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.

                        Example: "example.net/gateway-controller".

                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                  required:
                  - ancestorRef
                  - controllerName
                  type: object
                maxItems: 16
                type: array
            required:
            - ancestors
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
